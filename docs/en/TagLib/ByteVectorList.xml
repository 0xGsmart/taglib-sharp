<Type Name="ByteVectorList" FullName="TagLib.ByteVectorList">
  <TypeSignature Language="C#" Value="public class ByteVectorList : TagLib.ListBase&lt;TagLib.ByteVector&gt;" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>1.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.ListBase&lt;TagLib.ByteVector&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TagLib.ByteVector</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ByteVectorList ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.ByteVectorList" /> with no contents.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToByteVector">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector ToByteVector (TagLib.ByteVector separator);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="separator">A <see cref="T:TagLib.ByteVector" /> to join the elements of the current instance with.</param>
        <summary>Converts the current instance to a <see cref="T:TagLib.ByteVector" /> by joining the elements with a separator.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the joined contents of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static TagLib.ByteVectorList Split (TagLib.ByteVector vector, TagLib.ByteVector pattern, int byteAlign, int max);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVectorList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="TagLib.ByteVector" />
        <Parameter Name="pattern" Type="TagLib.ByteVector" />
        <Parameter Name="byteAlign" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="vector">A <see cref="T:TagLib.ByteVector" /> to split.</param>
        <param name="pattern">A <see cref="T:TagLib.ByteVector" /> to use to split the <see cref="T:TagLib.ByteVector" />.</param>
        <param name="byteAlign">A <see cref="T:System.Int32" /> specifying the byte alignment to use when splitting the <see cref="T:TagLib.ByteVector" />.</param>
        <param name="max">A <see cref="T:System.Int32" /> specifying a limit to the number of elements to create. Once the limit has been reached, the last string will be filled by the remainder of the data.</param>
        <summary>Splits a <see cref="T:TagLib.ByteVector" /> into multiple instances, by finding a pattern.</summary>
        <returns>A new instance of <see cref="T:TagLib.ByteVectorList" /> containing the newly split values.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static TagLib.ByteVectorList Split (TagLib.ByteVector vector, TagLib.ByteVector pattern, int byteAlign);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVectorList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="TagLib.ByteVector" />
        <Parameter Name="pattern" Type="TagLib.ByteVector" />
        <Parameter Name="byteAlign" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="vector">A <see cref="T:TagLib.ByteVector" /> to split.</param>
        <param name="pattern">A <see cref="T:TagLib.ByteVector" /> to use to split the <see cref="T:TagLib.ByteVector" />.</param>
        <param name="byteAlign">A <see cref="T:System.Int32" /> specifying the byte alignment to use when splitting the <see cref="T:TagLib.ByteVector" />.</param>
        <summary>Splits a <see cref="T:TagLib.ByteVector" /> into multiple instances, by finding a pattern.</summary>
        <returns>A new instance of <see cref="T:TagLib.ByteVectorList" /> containing the newly split values.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static TagLib.ByteVectorList Split (TagLib.ByteVector vector, TagLib.ByteVector pattern);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVectorList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="TagLib.ByteVector" />
        <Parameter Name="pattern" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="vector">A <see cref="T:TagLib.ByteVector" /> to split.</param>
        <param name="pattern">A <see cref="T:TagLib.ByteVector" /> to use to split the <see cref="T:TagLib.ByteVector" />.</param>
        <summary>Splits a <see cref="T:TagLib.ByteVector" /> into multiple instances, by finding a pattern.</summary>
        <returns>A new instance of <see cref="T:TagLib.ByteVectorList" /> containing the newly split values.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ByteVectorList (System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt; vectors);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="vectors" Type="System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt;" />
      </Parameters>
      <Docs>
        <param name="vectors">A <see cref="T:System.Collections.Generic.IEnumerable&lt;TagLib.ByteVector&gt;" /> whose contents are to be added to the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.ByteVectorList" />, filling it with a collection of elements.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ByteVectorList (TagLib.ByteVector[] vectors);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="vectors" Type="TagLib.ByteVector[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vectors">A <see cref="T:TagLib.ByteVector" /> array whose contents are to be added to the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.ByteVectorList" />, filling it with a collection of elements.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class represents and performs operations on variable length list of <see cref="T:TagLib.ByteVector" /> elements.</summary>
    <remarks />
  </Docs>
</Type>
