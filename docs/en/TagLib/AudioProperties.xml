<Type Name="AudioProperties" FullName="TagLib.AudioProperties">
  <TypeSignature Language="C#" Value="public class AudioProperties" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>1.0.0.29834</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioProperties (TagLib.AudioProperties+ReadStyle style);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="style" Type="TagLib.AudioProperties+ReadStyle" />
      </Parameters>
      <Docs>
        <param name="style">A <see cref="T:TagLib.AudioProperties+ReadStyle" /> telling how thoroughly to read the audio properties.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.AudioProperties" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual int Length { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the audio stream in seconds.</summary>
        <value>A <see cref="T:System.Int32" /> representing the number of seconds in the audio stream.</value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete(Message="This property is obsolete; use the Duration property instead.", IsError=False)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Bitrate">
      <MemberSignature Language="C#" Value="public virtual int Bitrate { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the bitrate, in kilobits per second, of the file.</summary>
        <value>A <see cref="T:System.Int32" /> representing the bitrate.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SampleRate">
      <MemberSignature Language="C#" Value="public virtual int SampleRate { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sample rate of the audio data in Hz.</summary>
        <value>A <see cref="T:System.Int32" /> representing the sample rate.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Channels">
      <MemberSignature Language="C#" Value="public virtual int Channels { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the number of channels (outputs) of the audio stream.</para>
        </summary>
        <value>A <see cref="T:System.Int32" /> representing the number of channels.</value>
        <remarks>The value of this property should typically be 2, representing stereo audio. Another common setting is 1, for mono. These values could vary though, as higher end media files could contain 6 or more channels.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual TimeSpan Duration { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class provides a generic framework for reading a file's audio properties. This is used by the <see cref="T:TagLib.File" /> class and all classes that decend from it.</summary>
    <remarks>
      <para>The <see cref="T:TagLib.AudioProperties" /> class will never be created by the user and never as this base class. The audio properties will typically be retreived by loading a file in a usual manner and accessing <see cref="P:TagLib.File.AudioProperties" />. The subclass of <see cref="T:TagLib.AudioProperties" /> returned by this property varies depending on the class that creates it.</para>
      <example>
        <code lang="C#">
TagLib.File file = TagLib.CreateFile ("mymusic.ogg"); // TagLib.Ogg.Vorbis.File
TagLib.AudioProperties properties = file.AudioProperties; // TagLib.Ogg.Vorbis.Properties

// Using standard properties.
System.Console.WriteLine ("Bitrate: " + properties.Bitrate);

// Accessing properties from the derived class.
System.Console.WriteLine ("Vorbis version: " + ((TagLib.Ogg.Vorbis.Properties) properties).VorbisVersion);

  </code>
      </example>
    </remarks>
  </Docs>
</Type>
