<Type Name="EndTag" FullName="TagLib.NonContainer.EndTag">
  <TypeSignature Language="C#" Value="public class EndTag : TagLib.CombinedTag" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>1.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TagLib.CombinedTag</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndTag (TagLib.File file);" />
      <MemberType>Constructor</MemberType>
      <Parameters><Parameter Name="file" Type="TagLib.File" /></Parameters>
      <Docs><param name="file">The <see cref="T:TagLib.File" /> to be read.</param><summary>Creates a <see cref="T:TagLib.NonContainer.EndTag" /> for a given <see cref="T:TagLib.File" />.</summary><remarks>The file is not read until <see cref="M:TagLib.NonContainer.EndTag.Read()" /> is called.</remarks></Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public TagLib.Tag AddTag (TagLib.TagTypes type, TagLib.Tag copy);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>TagLib.Tag</ReturnType></ReturnValue>
      <Parameters><Parameter Name="type" Type="TagLib.TagTypes" /><Parameter Name="copy" Type="TagLib.Tag" /></Parameters>
      <Docs><param name="type"><para>The type of tag to add. Must be TagLib.TagTypes.Id3v2, TagLib.TagTypes.Id3v1, or TagLib.TagTypes.Ape</para></param><param name="copy">A tag whose contents should be copied onto the newly created tag.</param><summary><para>Adds a tag of a given type to the combined tag, copying another tag's data if available.</para></summary><returns>The newly created tag, if supported, otherwise null.</returns><remarks /></Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public long Read ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Int64</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>Reads all supported tags starting at the very end of the file and returns the position of the first tag at the end of the file.</summary><returns>The position of the last byte at the end of the file. This should also be the end of the audio data.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="RemoveTags">
      <MemberSignature Language="C#" Value="public void RemoveTags (TagLib.TagTypes types);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="types" Type="TagLib.TagTypes" /></Parameters>
      <Docs><param name="types">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>TagLib.ByteVector</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="TotalSize">
      <MemberSignature Language="C#" Value="public long TotalSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int64</ReturnType></ReturnValue>
      <Docs><summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public long Write ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Int64</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks></Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
