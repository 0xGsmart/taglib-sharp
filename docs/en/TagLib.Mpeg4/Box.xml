<Type Name="Box" FullName="TagLib.Mpeg4.Box">
  <TypeSignature Language="C#" Value="public class Box" />
  <AssemblyInfo>
    <AssemblyName>taglib-sharp</AssemblyName>
    <AssemblyVersion>1.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Box (TagLib.Mpeg4.BoxHeader header, TagLib.Mpeg4.File file, TagLib.Mpeg4.Box handler);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Mpeg4.BoxHeader" />
        <Parameter Name="file" Type="TagLib.Mpeg4.File" />
        <Parameter Name="handler" Type="TagLib.Mpeg4.Box" />
      </Parameters>
      <Docs>
        <param name="header">A <see cref="T:TagLib.Mpeg4.BoxHeader" /> containing the header for the new instance.</param>
        <param name="file">A <see cref="T:TagLib.Mpeg4.File" /> to read from.</param>
        <param name="handler">A <see cref="T:TagLib.Mpeg4.Box" /> containing the handler that applies to the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.Box" /> for a specified header by reading from a file.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Box (TagLib.Mpeg4.BoxHeader header);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="header" Type="TagLib.Mpeg4.BoxHeader" />
      </Parameters>
      <Docs>
        <param name="header">A <see cref="T:TagLib.Mpeg4.BoxHeader" /> containing the header for the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.Box" /> for a specified header.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Box (TagLib.ByteVector type);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="type" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:TagLib.ByteVector" /> specifying the type of the new instance.</param>
        <summary>Constructs and initializes a new instance of <see cref="T:TagLib.Mpeg4.Box" /> of a specified type.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public TagLib.ByteVector Render ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renders the current instance as a box.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadChildren">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg4.BoxList LoadChildren (TagLib.Mpeg4.File file);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg4.BoxList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="TagLib.Mpeg4.File" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Mpeg4.File" /> to read from.</param>
        <summary>Reads and returns the children the current instance.</summary>
        <returns>A <see cref="T:TagLib.Mpeg4.BoxList" /> containing the children of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadData">
      <MemberSignature Language="C#" Value="protected TagLib.ByteVector LoadData (TagLib.Mpeg4.File file);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="TagLib.Mpeg4.File" />
      </Parameters>
      <Docs>
        <param name="file">A <see cref="T:TagLib.Mpeg4.File" /> to read from.</param>
        <summary>Reads and returns the contents the current instance.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the contents of the current instance.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected virtual TagLib.ByteVector Render (TagLib.ByteVector top_data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top_data" Type="TagLib.ByteVector" />
      </Parameters>
      <Docs>
        <param name="top_data">A <see cref="T:TagLib.ByteVector" /> containing data to insert before the contents of the box.</param>
        <summary>Renders the current instance as a box, inserting data above the normal rendered content.</summary>
        <returns>A <see cref="T:TagLib.ByteVector" /> containing the rendered version of the current instance.</returns>
        <remarks>
          <para>This should be used to render items with data specified at the beginning. For example, IsoFullBox does the following:</para>
          <example>
            <code lang="C#">protected override ByteVector Render (ByteVector data)
{
   ByteVector output = new ByteVector ((byte) version);
   output.Add (ByteVector.FromUInt (flags).Mid (1,3));
   output.Add (data);
   return base.Render (output);
}</code>
          </example>
          <para>This inserts the version and flags at the top of the box without interfering with the ability of subclasses to add their own content.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoxType">
      <MemberSignature Language="C#" Value="public virtual TagLib.ByteVector BoxType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type box represented by the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing the box type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual int Size { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total size of the current instance on disk.</summary>
        <value>A <see cref="T:System.Int32" /> containing the total size on disk.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataSize">
      <MemberSignature Language="C#" Value="protected int DataSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the size of the data (or children) in the current instance.</summary>
        <value>A <see cref="T:System.Int32" /> containing the size of the data.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataPosition">
      <MemberSignature Language="C#" Value="protected virtual long DataPosition { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset of the data after box specific information is accounted for.</summary>
        <value>A <see cref="T:System.Int64" /> specifying the seek position at which the data starts.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="protected TagLib.Mpeg4.BoxHeader Header { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg4.BoxHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the header of the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg4.BoxHeader" /> containing the header.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual TagLib.ByteVector Data { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.ByteVector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data contained in the current instance.</summary>
        <value>A <see cref="T:TagLib.ByteVector" /> containing the data.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public virtual TagLib.Mpeg4.BoxList Children { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg4.BoxList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the children of the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg4.BoxList" /> containing the children, or <see langref="null" /> if the box does not support children.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public TagLib.Mpeg4.IsoHandlerBox Handler { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>TagLib.Mpeg4.IsoHandlerBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the handler that applies to the current instance.</summary>
        <value>A <see cref="T:TagLib.Mpeg4.IsoHandlerBox" /> that applied to the current instance of <see langword="null" /> if none exists.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This abstract class provides access to ISO/IEC 14496-12 Boxes.</summary>
    <remarks />
  </Docs>
</Type>
